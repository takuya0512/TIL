# 23が素数かどうかを判定するプログラムを作成してください。
# ただし、素数について扱えるRubyの標準ライブラリprimeはしてはいけません。
# ヒント1: ある数nより小さい全ての素数でnが割り切れない場合、nは素数であると言えます。
# ヒント2: 23より小さい素数の配列を用意しましょう。
# ヒント3: 繰り返しの中で割り切れなかった回数をカウントしておき、「全ての素数で割り切れなかったかどうか」の判定で利用しましょう。

# 解答解説
# 今回の「count」という変数のように、each文の中でも繰り返しの’中で1つの変数を変化させていくことができます。
# 素数の配列から素数を1つ1つ取り出し、nがその素数で割り切れるかをチェックします。もし割り切れた場合は変数countを1大きくし、
# 全ての繰り返しが終了したあとcountが0であった場合、配列の中にあった素数では割り切れなかったということになるため、
# これで素数かどうかを判定しています。

primes = [2,3,5,7,11,13,17,19]
count = 0

primes.each do |p|
  if 23 % p == 0
    count = count + 1
  end
end

if count == 0
  puts "23は素数ではありません"
else
  puts "23は素数です"
end

# もしくは

# 判定対象の数
n = 23

# nが割り切れるかどうかのカウント用変数
count = 0

# 2からn-1までの数で割り切れるかどうかを調べる
(2..n-1).each do |i|
  if n % i == 0
    count += 1
  end
end

# 割り切れなかった場合は素数と判定
if count == 0
  puts "#{n}は素数です"
else
  puts "#{n}は素数ではありません"
end
